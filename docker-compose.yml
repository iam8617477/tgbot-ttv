services:
  app:
    build: .
    command: >
      sh -c "
        echo 'Waiting 15 seconds before starting...';
        sleep 15;
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn app.wsgi:application --workers 1 --bind 0.0.0.0:8001"
    expose:
      - '8001'
    networks:
      - public_network
      - app_to_db
      - shared_network
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - HOST_NAME=${HOST_NAME}

  tgbot-ttv:
    build: .
    restart: always
    command: >
      sh -c "
        echo 'Waiting 15 seconds before starting...';
        sleep 15;
        python run.py"
    networks:
      - public_network
      - tgbot_to_db
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - HOST_NAME=${HOST_NAME}

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - tgbot_to_db
      - app_to_db


networks:
  public_network:
    driver: bridge
  tgbot_to_db:
    driver: bridge
    internal: true
  app_to_db:
    driver: bridge
    internal: true
  shared_network:
    name: project_shared_network
    driver: bridge

volumes:
  postgres_data:
